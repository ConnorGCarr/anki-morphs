[tool.isort]
profile = "black"
skip_gitignore = "True"
line_length = "88"

[tool.mypy]
warn_return_any = "True"
warn_unused_configs = "True"
ignore_missing_imports = "True"
follow_imports = "silent" # TODO change this eventually
disable_error_code = ["method-assign"]
strict = "True"

[tool.pylint]

[tool.pylint."MESSAGES CONTROL"]
disable = """
    missing-module-docstring,
    missing-function-docstring,
    missing-class-docstring,
    protected-access,
    redefined-outer-name,
    line-too-long,
    too-few-public-methods,
    fixme,
    global-statement,
"""

[tool.pylint.similarities]
ignore-comments = true
ignore-docstrings = true
ignore-imports = true
ignore-signatures = true
min-similarity-lines = 7

# Docs: https://docs.pytest.org/en/7.1.x/reference/reference.html#ini-options-ref
[tool.pytest.ini_options]
# testpaths: directories that should be searched when no specific directories, files or test ids are given
testpaths = "tests"
# python_files: determining which python files are considered as test modules.
python_files = "*_test.py"
# python_functions: which test functions and methods are considered tests
python_functions = "test_*"
# required_plugins: plugins that must be present for pytest to run
# pytest-qt: allows for writing tests for PyQt5, PyQt6, PySide2 and PySide6 applications.
# pytest-xvfb: allows tests to be run without windows popping up during GUI tests or on systems without a display (like a CI).
required_plugins = "pytest-qt pytest-xvfb"
# xfail_strict = True: tests marked with @pytest.mark.xfail that actually succeed will by default fail the test suite
xfail_strict = "True"
# addopts: set of command line arguments as if they had been specified by the user
# --strict-markers: markers not registered in the `markers` section of the configuration file raise errors.
# --durations=5: show N slowest setup/test durations (N=0 for all)
# --maxfail=1: exit after first num failures or errors.
addopts = "--strict-markers --durations=5 --maxfail=1"
# markers: whitelist custom markers
# example with: pytest -m slow
markers = [
  "slow",
  "recalc"
]

[tool.vulture]
paths = ["ankimorphs"]
exclude = [
  "ankimorphs/deps/",
  "ankimorphs/ui/",
  "ankimorphs/util_external.py",
  "ankimorphs/debug_utils.py",
  "ankimorphs/table_utils.py",
  "ankimorphs/mecab_wrapper.py"
]
ignore_names = ["print_*", "_refresh_needed", "_v3", "reopen", "closeWithCallback"]
min_confidence = 60
sort_by_size = true
verbose = false
